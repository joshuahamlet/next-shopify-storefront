import { GetStaticPaths, GetStaticProps } from 'next'
import Head from 'next/head'
import Image from 'next/image'
import { useRouter } from 'next/router'
import styles from '../../styles/Pasta.module.css'
import Client from 'shopify-buy'
import { AnimatePresence, motion, Variants } from 'framer-motion'
import { useEffect } from 'react'
import { useAtom } from 'jotai'
import { currentIdAtom } from '../../components/atoms'


const Pasta = ({product}) => {
  console.log('PRODUCT', product)
  const [currentId, setCurrentId] = useAtom(currentIdAtom)
  const router = useRouter()
  const { id } = router.query

  useEffect(() => {
    console.log("CURRENTIDIS",currentId)
    if (currentId == "") {
      setCurrentId(id)
    }
  }, [])

  const container: Variants = {
    animTitle: {
      opacity: 1,
      transition: {
        delayChildren: .25,
      }
    },
    
    exitTitle: {
      opacity: 0,
      transition: {
        delayChildren: .25,
      }
    },

    initCheckout: {opacity: 0},
    animCheckout: {
      opacity: 1,
      transition: {
        delayChildren: .25,
        staggerChildren: .25
      }
    },
    exitCheckout: {opacity: 0}
  }

  const itemFontSize: Variants = {
    animTitle: {
      fontSize: "50px",
    },

    exitTitle: {
      fontSize: "10px"
    }
  }

  const itemScale: Variants = {
    initCheckout: {scale: 0},
    animCheckout: {
      scale: 1,
    }
  }

  return (
    <div className={styles.container}>
      <Head>
        <title>Pasta: {`${product.title}`}</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
      <AnimatePresence>
        <motion.div 
          key={`bloop`}
          variants={container}
          layout="position"
          layoutId={`productCard${id}`} 
          className={styles.card}
          animate="animTitle"
          exit="exitTitle"
        >
          <motion.h2
            variants={itemFontSize}
            layout="position"
            className={styles["card-title"]}
          >
            {product.title}
          </motion.h2>
          <div>
            <div className={styles.grid}>
              <div className={styles.gridImage}>
                <Image 
                  placeholder='blur' 
                  blurDataURL={product.images[0].src} 
                  layout='fill' 
                  className={styles.cardImage} 
                  src={product.images[0].src}
                />
              </div>
          
              <p className={styles.gridDescription}>
                {product.description}
              </p>
              <motion.div 
                variants={container}
                initial="initCheckout"
                animate="animCheckout"
                exit="exitCheckout"
                className={styles.gridCheckout}
              >
                <motion.div 
                  variants={itemScale} 
                  style={{marginBottom: "30px"}}
                >
                  Price: {` ${product.price}`}
                </motion.div>
                <motion.div 
                  variants={itemScale} 
                  className={styles["checkout-button"]}
                >
                  Buy
                </motion.div>
                <motion.div 
                  variants={itemScale} 
                  className={styles["checkout-button"]}
                >
                  Add to cart
                </motion.div>
              </motion.div>
            </div>
          </div>
        </motion.div>
        </AnimatePresence>
      </main>
    </div>
  )
}

export const getStaticProps: GetStaticProps = async({params}:any) => {
  console.log('params', params)
  const client = Client.buildClient({
    domain: process.env.REACT_APP_SHOPIFY_DOMAIN, 
    storefrontAccessToken: process.env.REACT_APP_SHOPIFY_API 
  })

  let response = await client.product.fetch(params.id)
  let product = response
    // Do something with the product
    console.log(product.id);
    console.log(product.description);
    console.log('fuckingPRODUCT', product);

  return {
    props: {
      product: JSON.parse(JSON.stringify(product))
    },
  }
}

export const getStaticPaths: GetStaticPaths = async() => {
  
  const client = Client.buildClient({
    domain: process.env.REACT_APP_SHOPIFY_DOMAIN,
    storefrontAccessToken: process.env.REACT_APP_SHOPIFY_API
  })
    
  let response = await client.product.fetchAll()
  let products = response
    
  let productIds = products.map(i => i.id)
  console.log('Product Ids', productIds)

  const paths = productIds.map((id) => ({ params: { id: id.toString() } }));

  return {
    paths,
    fallback: false
  }
}

export default Pasta